{"version":3,"sources":["../src/preact.js","../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/render.js","ntc.js","lib.js","main.js"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","applyRef","ref","value","current","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","isSameNodeType","node","_componentConstructor","isNamedNode","normalizedNodeName","defaultProps","document","createElementNS","removeNode","parentNode","setAccessor","old","name","style","innerHTML","__html","useCapture","_listeners","removeChild","ns","eventProxy","mounts","diffLevel","hydrating","flushMounts","c","shift","ret","parent","componentRoot","prevSvgMode","ATTR_KEY","out","buildComponentFromVNode","vnodeName","dom","firstChild","appendChild","nodeValue","vchildren","context","mountAll","originalChildren","keyed","min","len","childrenLen","vlen","j","f","vchild","keyedLen","component","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","createComponent","Ctor","prototype","constructor","nextBase","doRender","setComponentProps","_disable","componentWillReceiveProps","prevContext","renderMode","syncComponentUpdates","previousProps","previousState","__ref","renderComponent","state","isUpdate","base","initialBase","snapshot","rendered","inst","cbase","shouldComponentUpdate","prevProps","_dirty","render","getSnapshotBeforeUpdate","childComponent","childProps","getNodeProps","initialChildComponent","baseParent","replaceChild","_component","toUnmount","componentRef","t","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isOwner","beforeUnmount","componentWillUnmount","callback","diff","merge","createRef","ntc","init","color","rgb","hsl","names","toUpperCase","substr","r","g","b","s","l","ndf","cl","df","Math","pow","max","delta","parseInt","substring","dayInMs","nrOfAvailableColors","getPercentageOfDay","now","Date","getTime","getRgbColorWheelValue","perc","floor","hex","toString","padStart","colorInfo","getLinearColorForDayTime","index","getRandomColorValue","random","inverseColor","description","algoMap","Main","time","algorithm","Object","keys","backgroundColor","textColor","colorName","textShadow","updateInterval","showMenu","displayMenu","hideMenu","onAlgoChange","update","Component","clockTimer","setInterval","setState","inverseCol","updateTimer","clearTimeout","e","preventDefault","stopPropagation","target","fullscreenElement","exitFullscreen","fullscreenEnabled","body","requestFullscreen","clearInterval","timeStr","getHours","getMinutes","getSeconds","algoItems","map","Number","toggleFullscreen"],"mappings":"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","file":"main.215ec262.js","sourceRoot":"..","sourcesContent":["import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nfunction createRef() {\n\treturn {};\n}\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref!=null) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","/*\n\n+-----------------------------------------------------------------+\n|     Created by Chirag Mehta - http://chir.ag/projects/ntc       |\n|-----------------------------------------------------------------|\n|               ntc js (Name that Color JavaScript)               |\n+-----------------------------------------------------------------+\n\nAll the functions, code, lists etc. have been written specifically\nfor the Name that Color JavaScript by Chirag Mehta unless otherwise\nspecified.\n\nThis script is released under the: Creative Commons License:\nAttribution 2.5 http://creativecommons.org/licenses/by/2.5/\n\nSample Usage:\n\n  <script type=\"text/javascript\" src=\"ntc.js\"></script>\n\n  <script type=\"text/javascript\">\n\n    var n_match  = ntc.name(\"#6195ED\");\n    n_rgb        = n_match[0]; // This is the RGB value of the closest matching color\n    n_name       = n_match[1]; // This is the text string for the name of the match\n    n_exactmatch = n_match[2]; // True if exact color match, False if close-match\n\n    alert(n_match);\n\n  </script>\n\n*/\n\nvar ntc = {\n    init: function() {\n        var color, rgb, hsl;\n        for (var i = 0; i < ntc.names.length; i++) {\n            color = '#' + ntc.names[i][0];\n            rgb = ntc.rgb(color);\n            hsl = ntc.hsl(color);\n            ntc.names[i].push(rgb[0], rgb[1], rgb[2], hsl[0], hsl[1], hsl[2]);\n        }\n    },\n\n    name: function(color) {\n        color = color.toUpperCase();\n        if (color.length < 3 || color.length > 7) return ['#000000', 'Invalid Color: ' + color, false];\n        if (color.length % 3 == 0) color = '#' + color;\n        if (color.length == 4)\n            color =\n                '#' +\n                color.substr(1, 1) +\n                color.substr(1, 1) +\n                color.substr(2, 1) +\n                color.substr(2, 1) +\n                color.substr(3, 1) +\n                color.substr(3, 1);\n\n        var rgb = ntc.rgb(color);\n        var r = rgb[0],\n            g = rgb[1],\n            b = rgb[2];\n        var hsl = ntc.hsl(color);\n        var h = hsl[0],\n            s = hsl[1],\n            l = hsl[2];\n        var ndf1 = 0,\n            ndf2 = 0,\n            ndf = 0;\n        var cl = -1,\n            df = -1;\n\n        for (var i = 0; i < ntc.names.length; i++) {\n            if (color == '#' + ntc.names[i][0]) return ['#' + ntc.names[i][0], ntc.names[i][1], true];\n\n            ndf1 =\n                Math.pow(r - ntc.names[i][2], 2) + Math.pow(g - ntc.names[i][3], 2) + Math.pow(b - ntc.names[i][4], 2);\n            ndf2 =\n                Math.pow(h - ntc.names[i][5], 2) + Math.pow(s - ntc.names[i][6], 2) + Math.pow(l - ntc.names[i][7], 2);\n            ndf = ndf1 + ndf2 * 2;\n            if (df < 0 || df > ndf) {\n                df = ndf;\n                cl = i;\n            }\n        }\n\n        return cl < 0\n            ? ['#000000', 'Invalid Color: ' + color, false]\n            : ['#' + ntc.names[cl][0], ntc.names[cl][1], false];\n    },\n\n    // adopted from: Farbtastic 1.2\n    // http://acko.net/dev/farbtastic\n    hsl: function(color) {\n        var rgb = [\n            parseInt('0x' + color.substring(1, 3)) / 255,\n            parseInt('0x' + color.substring(3, 5)) / 255,\n            parseInt('0x' + color.substring(5, 7)) / 255\n        ];\n        var min, max, delta, h, s, l;\n        var r = rgb[0],\n            g = rgb[1],\n            b = rgb[2];\n\n        min = Math.min(r, Math.min(g, b));\n        max = Math.max(r, Math.max(g, b));\n        delta = max - min;\n        l = (min + max) / 2;\n\n        s = 0;\n        if (l > 0 && l < 1) s = delta / (l < 0.5 ? 2 * l : 2 - 2 * l);\n\n        h = 0;\n        if (delta > 0) {\n            if (max == r && max != g) h += (g - b) / delta;\n            if (max == g && max != b) h += 2 + (b - r) / delta;\n            if (max == b && max != r) h += 4 + (r - g) / delta;\n            h /= 6;\n        }\n        return [parseInt(h * 255), parseInt(s * 255), parseInt(l * 255)];\n    },\n\n    // adopted from: Farbtastic 1.2\n    // http://acko.net/dev/farbtastic\n    rgb: function(color) {\n        return [\n            parseInt('0x' + color.substring(1, 3)),\n            parseInt('0x' + color.substring(3, 5)),\n            parseInt('0x' + color.substring(5, 7))\n        ];\n    },\n\n    names: [\n        ['000000', 'Black'],\n        ['000080', 'Navy Blue'],\n        ['0000C8', 'Dark Blue'],\n        ['0000FF', 'Blue'],\n        ['000741', 'Stratos'],\n        ['001B1C', 'Swamp'],\n        ['002387', 'Resolution Blue'],\n        ['002900', 'Deep Fir'],\n        ['002E20', 'Burnham'],\n        ['002FA7', 'International Klein Blue'],\n        ['003153', 'Prussian Blue'],\n        ['003366', 'Midnight Blue'],\n        ['003399', 'Smalt'],\n        ['003532', 'Deep Teal'],\n        ['003E40', 'Cyprus'],\n        ['004620', 'Kaitoke Green'],\n        ['0047AB', 'Cobalt'],\n        ['004816', 'Crusoe'],\n        ['004950', 'Sherpa Blue'],\n        ['0056A7', 'Endeavour'],\n        ['00581A', 'Camarone'],\n        ['0066CC', 'Science Blue'],\n        ['0066FF', 'Blue Ribbon'],\n        ['00755E', 'Tropical Rain Forest'],\n        ['0076A3', 'Allports'],\n        ['007BA7', 'Deep Cerulean'],\n        ['007EC7', 'Lochmara'],\n        ['007FFF', 'Azure Radiance'],\n        ['008080', 'Teal'],\n        ['0095B6', 'Bondi Blue'],\n        ['009DC4', 'Pacific Blue'],\n        ['00A693', 'Persian Green'],\n        ['00A86B', 'Jade'],\n        ['00CC99', 'Caribbean Green'],\n        ['00CCCC', \"Robin's Egg Blue\"],\n        ['00FF00', 'Green'],\n        ['00FF7F', 'Spring Green'],\n        ['00FFFF', 'Cyan / Aqua'],\n        ['010D1A', 'Blue Charcoal'],\n        ['011635', 'Midnight'],\n        ['011D13', 'Holly'],\n        ['012731', 'Daintree'],\n        ['01361C', 'Cardin Green'],\n        ['01371A', 'County Green'],\n        ['013E62', 'Astronaut Blue'],\n        ['013F6A', 'Regal Blue'],\n        ['014B43', 'Aqua Deep'],\n        ['015E85', 'Orient'],\n        ['016162', 'Blue Stone'],\n        ['016D39', 'Fun Green'],\n        ['01796F', 'Pine Green'],\n        ['017987', 'Blue Lagoon'],\n        ['01826B', 'Deep Sea'],\n        ['01A368', 'Green Haze'],\n        ['022D15', 'English Holly'],\n        ['02402C', 'Sherwood Green'],\n        ['02478E', 'Congress Blue'],\n        ['024E46', 'Evening Sea'],\n        ['026395', 'Bahama Blue'],\n        ['02866F', 'Observatory'],\n        ['02A4D3', 'Cerulean'],\n        ['03163C', 'Tangaroa'],\n        ['032B52', 'Green Vogue'],\n        ['036A6E', 'Mosque'],\n        ['041004', 'Midnight Moss'],\n        ['041322', 'Black Pearl'],\n        ['042E4C', 'Blue Whale'],\n        ['044022', 'Zuccini'],\n        ['044259', 'Teal Blue'],\n        ['051040', 'Deep Cove'],\n        ['051657', 'Gulf Blue'],\n        ['055989', 'Venice Blue'],\n        ['056F57', 'Watercourse'],\n        ['062A78', 'Catalina Blue'],\n        ['063537', 'Tiber'],\n        ['069B81', 'Gossamer'],\n        ['06A189', 'Niagara'],\n        ['073A50', 'Tarawera'],\n        ['080110', 'Jaguar'],\n        ['081910', 'Black Bean'],\n        ['082567', 'Deep Sapphire'],\n        ['088370', 'Elf Green'],\n        ['08E8DE', 'Bright Turquoise'],\n        ['092256', 'Downriver'],\n        ['09230F', 'Palm Green'],\n        ['09255D', 'Madison'],\n        ['093624', 'Bottle Green'],\n        ['095859', 'Deep Sea Green'],\n        ['097F4B', 'Salem'],\n        ['0A001C', 'Black Russian'],\n        ['0A480D', 'Dark Fern'],\n        ['0A6906', 'Japanese Laurel'],\n        ['0A6F75', 'Atoll'],\n        ['0B0B0B', 'Cod Gray'],\n        ['0B0F08', 'Marshland'],\n        ['0B1107', 'Gordons Green'],\n        ['0B1304', 'Black Forest'],\n        ['0B6207', 'San Felix'],\n        ['0BDA51', 'Malachite'],\n        ['0C0B1D', 'Ebony'],\n        ['0C0D0F', 'Woodsmoke'],\n        ['0C1911', 'Racing Green'],\n        ['0C7A79', 'Surfie Green'],\n        ['0C8990', 'Blue Chill'],\n        ['0D0332', 'Black Rock'],\n        ['0D1117', 'Bunker'],\n        ['0D1C19', 'Aztec'],\n        ['0D2E1C', 'Bush'],\n        ['0E0E18', 'Cinder'],\n        ['0E2A30', 'Firefly'],\n        ['0F2D9E', 'Torea Bay'],\n        ['10121D', 'Vulcan'],\n        ['101405', 'Green Waterloo'],\n        ['105852', 'Eden'],\n        ['110C6C', 'Arapawa'],\n        ['120A8F', 'Ultramarine'],\n        ['123447', 'Elephant'],\n        ['126B40', 'Jewel'],\n        ['130000', 'Diesel'],\n        ['130A06', 'Asphalt'],\n        ['13264D', 'Blue Zodiac'],\n        ['134F19', 'Parsley'],\n        ['140600', 'Nero'],\n        ['1450AA', 'Tory Blue'],\n        ['151F4C', 'Bunting'],\n        ['1560BD', 'Denim'],\n        ['15736B', 'Genoa'],\n        ['161928', 'Mirage'],\n        ['161D10', 'Hunter Green'],\n        ['162A40', 'Big Stone'],\n        ['163222', 'Celtic'],\n        ['16322C', 'Timber Green'],\n        ['163531', 'Gable Green'],\n        ['171F04', 'Pine Tree'],\n        ['175579', 'Chathams Blue'],\n        ['182D09', 'Deep Forest Green'],\n        ['18587A', 'Blumine'],\n        ['19330E', 'Palm Leaf'],\n        ['193751', 'Nile Blue'],\n        ['1959A8', 'Fun Blue'],\n        ['1A1A68', 'Lucky Point'],\n        ['1AB385', 'Mountain Meadow'],\n        ['1B0245', 'Tolopea'],\n        ['1B1035', 'Haiti'],\n        ['1B127B', 'Deep Koamaru'],\n        ['1B1404', 'Acadia'],\n        ['1B2F11', 'Seaweed'],\n        ['1B3162', 'Biscay'],\n        ['1B659D', 'Matisse'],\n        ['1C1208', 'Crowshead'],\n        ['1C1E13', 'Rangoon Green'],\n        ['1C39BB', 'Persian Blue'],\n        ['1C402E', 'Everglade'],\n        ['1C7C7D', 'Elm'],\n        ['1D6142', 'Green Pea'],\n        ['1E0F04', 'Creole'],\n        ['1E1609', 'Karaka'],\n        ['1E1708', 'El Paso'],\n        ['1E385B', 'Cello'],\n        ['1E433C', 'Te Papa Green'],\n        ['1E90FF', 'Dodger Blue'],\n        ['1E9AB0', 'Eastern Blue'],\n        ['1F120F', 'Night Rider'],\n        ['1FC2C2', 'Java'],\n        ['20208D', 'Jacksons Purple'],\n        ['202E54', 'Cloud Burst'],\n        ['204852', 'Blue Dianne'],\n        ['211A0E', 'Eternity'],\n        ['220878', 'Deep Blue'],\n        ['228B22', 'Forest Green'],\n        ['233418', 'Mallard'],\n        ['240A40', 'Violet'],\n        ['240C02', 'Kilamanjaro'],\n        ['242A1D', 'Log Cabin'],\n        ['242E16', 'Black Olive'],\n        ['24500F', 'Green House'],\n        ['251607', 'Graphite'],\n        ['251706', 'Cannon Black'],\n        ['251F4F', 'Port Gore'],\n        ['25272C', 'Shark'],\n        ['25311C', 'Green Kelp'],\n        ['2596D1', 'Curious Blue'],\n        ['260368', 'Paua'],\n        ['26056A', 'Paris M'],\n        ['261105', 'Wood Bark'],\n        ['261414', 'Gondola'],\n        ['262335', 'Steel Gray'],\n        ['26283B', 'Ebony Clay'],\n        ['273A81', 'Bay of Many'],\n        ['27504B', 'Plantation'],\n        ['278A5B', 'Eucalyptus'],\n        ['281E15', 'Oil'],\n        ['283A77', 'Astronaut'],\n        ['286ACD', 'Mariner'],\n        ['290C5E', 'Violent Violet'],\n        ['292130', 'Bastille'],\n        ['292319', 'Zeus'],\n        ['292937', 'Charade'],\n        ['297B9A', 'Jelly Bean'],\n        ['29AB87', 'Jungle Green'],\n        ['2A0359', 'Cherry Pie'],\n        ['2A140E', 'Coffee Bean'],\n        ['2A2630', 'Baltic Sea'],\n        ['2A380B', 'Turtle Green'],\n        ['2A52BE', 'Cerulean Blue'],\n        ['2B0202', 'Sepia Black'],\n        ['2B194F', 'Valhalla'],\n        ['2B3228', 'Heavy Metal'],\n        ['2C0E8C', 'Blue Gem'],\n        ['2C1632', 'Revolver'],\n        ['2C2133', 'Bleached Cedar'],\n        ['2C8C84', 'Lochinvar'],\n        ['2D2510', 'Mikado'],\n        ['2D383A', 'Outer Space'],\n        ['2D569B', 'St Tropaz'],\n        ['2E0329', 'Jacaranda'],\n        ['2E1905', 'Jacko Bean'],\n        ['2E3222', 'Rangitoto'],\n        ['2E3F62', 'Rhino'],\n        ['2E8B57', 'Sea Green'],\n        ['2EBFD4', 'Scooter'],\n        ['2F270E', 'Onion'],\n        ['2F3CB3', 'Governor Bay'],\n        ['2F519E', 'Sapphire'],\n        ['2F5A57', 'Spectra'],\n        ['2F6168', 'Casal'],\n        ['300529', 'Melanzane'],\n        ['301F1E', 'Cocoa Brown'],\n        ['302A0F', 'Woodrush'],\n        ['304B6A', 'San Juan'],\n        ['30D5C8', 'Turquoise'],\n        ['311C17', 'Eclipse'],\n        ['314459', 'Pickled Bluewood'],\n        ['315BA1', 'Azure'],\n        ['31728D', 'Calypso'],\n        ['317D82', 'Paradiso'],\n        ['32127A', 'Persian Indigo'],\n        ['32293A', 'Blackcurrant'],\n        ['323232', 'Mine Shaft'],\n        ['325D52', 'Stromboli'],\n        ['327C14', 'Bilbao'],\n        ['327DA0', 'Astral'],\n        ['33036B', 'Christalle'],\n        ['33292F', 'Thunder'],\n        ['33CC99', 'Shamrock'],\n        ['341515', 'Tamarind'],\n        ['350036', 'Mardi Gras'],\n        ['350E42', 'Valentino'],\n        ['350E57', 'Jagger'],\n        ['353542', 'Tuna'],\n        ['354E8C', 'Chambray'],\n        ['363050', 'Martinique'],\n        ['363534', 'Tuatara'],\n        ['363C0D', 'Waiouru'],\n        ['36747D', 'Ming'],\n        ['368716', 'La Palma'],\n        ['370202', 'Chocolate'],\n        ['371D09', 'Clinker'],\n        ['37290E', 'Brown Tumbleweed'],\n        ['373021', 'Birch'],\n        ['377475', 'Oracle'],\n        ['380474', 'Blue Diamond'],\n        ['381A51', 'Grape'],\n        ['383533', 'Dune'],\n        ['384555', 'Oxford Blue'],\n        ['384910', 'Clover'],\n        ['394851', 'Limed Spruce'],\n        ['396413', 'Dell'],\n        ['3A0020', 'Toledo'],\n        ['3A2010', 'Sambuca'],\n        ['3A2A6A', 'Jacarta'],\n        ['3A686C', 'William'],\n        ['3A6A47', 'Killarney'],\n        ['3AB09E', 'Keppel'],\n        ['3B000B', 'Temptress'],\n        ['3B0910', 'Aubergine'],\n        ['3B1F1F', 'Jon'],\n        ['3B2820', 'Treehouse'],\n        ['3B7A57', 'Amazon'],\n        ['3B91B4', 'Boston Blue'],\n        ['3C0878', 'Windsor'],\n        ['3C1206', 'Rebel'],\n        ['3C1F76', 'Meteorite'],\n        ['3C2005', 'Dark Ebony'],\n        ['3C3910', 'Camouflage'],\n        ['3C4151', 'Bright Gray'],\n        ['3C4443', 'Cape Cod'],\n        ['3C493A', 'Lunar Green'],\n        ['3D0C02', 'Bean  '],\n        ['3D2B1F', 'Bistre'],\n        ['3D7D52', 'Goblin'],\n        ['3E0480', 'Kingfisher Daisy'],\n        ['3E1C14', 'Cedar'],\n        ['3E2B23', 'English Walnut'],\n        ['3E2C1C', 'Black Marlin'],\n        ['3E3A44', 'Ship Gray'],\n        ['3EABBF', 'Pelorous'],\n        ['3F2109', 'Bronze'],\n        ['3F2500', 'Cola'],\n        ['3F3002', 'Madras'],\n        ['3F307F', 'Minsk'],\n        ['3F4C3A', 'Cabbage Pont'],\n        ['3F583B', 'Tom Thumb'],\n        ['3F5D53', 'Mineral Green'],\n        ['3FC1AA', 'Puerto Rico'],\n        ['3FFF00', 'Harlequin'],\n        ['401801', 'Brown Pod'],\n        ['40291D', 'Cork'],\n        ['403B38', 'Masala'],\n        ['403D19', 'Thatch Green'],\n        ['405169', 'Fiord'],\n        ['40826D', 'Viridian'],\n        ['40A860', 'Chateau Green'],\n        ['410056', 'Ripe Plum'],\n        ['411F10', 'Paco'],\n        ['412010', 'Deep Oak'],\n        ['413C37', 'Merlin'],\n        ['414257', 'Gun Powder'],\n        ['414C7D', 'East Bay'],\n        ['4169E1', 'Royal Blue'],\n        ['41AA78', 'Ocean Green'],\n        ['420303', 'Burnt Maroon'],\n        ['423921', 'Lisbon Brown'],\n        ['427977', 'Faded Jade'],\n        ['431560', 'Scarlet Gum'],\n        ['433120', 'Iroko'],\n        ['433E37', 'Armadillo'],\n        ['434C59', 'River Bed'],\n        ['436A0D', 'Green Leaf'],\n        ['44012D', 'Barossa'],\n        ['441D00', 'Morocco Brown'],\n        ['444954', 'Mako'],\n        ['454936', 'Kelp'],\n        ['456CAC', 'San Marino'],\n        ['45B1E8', 'Picton Blue'],\n        ['460B41', 'Loulou'],\n        ['462425', 'Crater Brown'],\n        ['465945', 'Gray Asparagus'],\n        ['4682B4', 'Steel Blue'],\n        ['480404', 'Rustic Red'],\n        ['480607', 'Bulgarian Rose'],\n        ['480656', 'Clairvoyant'],\n        ['481C1C', 'Cocoa Bean'],\n        ['483131', 'Woody Brown'],\n        ['483C32', 'Taupe'],\n        ['49170C', 'Van Cleef'],\n        ['492615', 'Brown Derby'],\n        ['49371B', 'Metallic Bronze'],\n        ['495400', 'Verdun Green'],\n        ['496679', 'Blue Bayoux'],\n        ['497183', 'Bismark'],\n        ['4A2A04', 'Bracken'],\n        ['4A3004', 'Deep Bronze'],\n        ['4A3C30', 'Mondo'],\n        ['4A4244', 'Tundora'],\n        ['4A444B', 'Gravel'],\n        ['4A4E5A', 'Trout'],\n        ['4B0082', 'Pigment Indigo'],\n        ['4B5D52', 'Nandor'],\n        ['4C3024', 'Saddle'],\n        ['4C4F56', 'Abbey'],\n        ['4D0135', 'Blackberry'],\n        ['4D0A18', 'Cab Sav'],\n        ['4D1E01', 'Indian Tan'],\n        ['4D282D', 'Cowboy'],\n        ['4D282E', 'Livid Brown'],\n        ['4D3833', 'Rock'],\n        ['4D3D14', 'Punga'],\n        ['4D400F', 'Bronzetone'],\n        ['4D5328', 'Woodland'],\n        ['4E0606', 'Mahogany'],\n        ['4E2A5A', 'Bossanova'],\n        ['4E3B41', 'Matterhorn'],\n        ['4E420C', 'Bronze Olive'],\n        ['4E4562', 'Mulled Wine'],\n        ['4E6649', 'Axolotl'],\n        ['4E7F9E', 'Wedgewood'],\n        ['4EABD1', 'Shakespeare'],\n        ['4F1C70', 'Honey Flower'],\n        ['4F2398', 'Daisy Bush'],\n        ['4F69C6', 'Indigo'],\n        ['4F7942', 'Fern Green'],\n        ['4F9D5D', 'Fruit Salad'],\n        ['4FA83D', 'Apple'],\n        ['504351', 'Mortar'],\n        ['507096', 'Kashmir Blue'],\n        ['507672', 'Cutty Sark'],\n        ['50C878', 'Emerald'],\n        ['514649', 'Emperor'],\n        ['516E3D', 'Chalet Green'],\n        ['517C66', 'Como'],\n        ['51808F', 'Smalt Blue'],\n        ['52001F', 'Castro'],\n        ['520C17', 'Maroon Oak'],\n        ['523C94', 'Gigas'],\n        ['533455', 'Voodoo'],\n        ['534491', 'Victoria'],\n        ['53824B', 'Hippie Green'],\n        ['541012', 'Heath'],\n        ['544333', 'Judge Gray'],\n        ['54534D', 'Fuscous Gray'],\n        ['549019', 'Vida Loca'],\n        ['55280C', 'Cioccolato'],\n        ['555B10', 'Saratoga'],\n        ['556D56', 'Finlandia'],\n        ['5590D9', 'Havelock Blue'],\n        ['56B4BE', 'Fountain Blue'],\n        ['578363', 'Spring Leaves'],\n        ['583401', 'Saddle Brown'],\n        ['585562', 'Scarpa Flow'],\n        ['587156', 'Cactus'],\n        ['589AAF', 'Hippie Blue'],\n        ['591D35', 'Wine Berry'],\n        ['592804', 'Brown Bramble'],\n        ['593737', 'Congo Brown'],\n        ['594433', 'Millbrook'],\n        ['5A6E9C', 'Waikawa Gray'],\n        ['5A87A0', 'Horizon'],\n        ['5B3013', 'Jambalaya'],\n        ['5C0120', 'Bordeaux'],\n        ['5C0536', 'Mulberry Wood'],\n        ['5C2E01', 'Carnaby Tan'],\n        ['5C5D75', 'Comet'],\n        ['5D1E0F', 'Redwood'],\n        ['5D4C51', 'Don Juan'],\n        ['5D5C58', 'Chicago'],\n        ['5D5E37', 'Verdigris'],\n        ['5D7747', 'Dingley'],\n        ['5DA19F', 'Breaker Bay'],\n        ['5E483E', 'Kabul'],\n        ['5E5D3B', 'Hemlock'],\n        ['5F3D26', 'Irish Coffee'],\n        ['5F5F6E', 'Mid Gray'],\n        ['5F6672', 'Shuttle Gray'],\n        ['5FA777', 'Aqua Forest'],\n        ['5FB3AC', 'Tradewind'],\n        ['604913', 'Horses Neck'],\n        ['605B73', 'Smoky'],\n        ['606E68', 'Corduroy'],\n        ['6093D1', 'Danube'],\n        ['612718', 'Espresso'],\n        ['614051', 'Eggplant'],\n        ['615D30', 'Costa Del Sol'],\n        ['61845F', 'Glade Green'],\n        ['622F30', 'Buccaneer'],\n        ['623F2D', 'Quincy'],\n        ['624E9A', 'Butterfly Bush'],\n        ['625119', 'West Coast'],\n        ['626649', 'Finch'],\n        ['639A8F', 'Patina'],\n        ['63B76C', 'Fern'],\n        ['6456B7', 'Blue Violet'],\n        ['646077', 'Dolphin'],\n        ['646463', 'Storm Dust'],\n        ['646A54', 'Siam'],\n        ['646E75', 'Nevada'],\n        ['6495ED', 'Cornflower Blue'],\n        ['64CCDB', 'Viking'],\n        ['65000B', 'Rosewood'],\n        ['651A14', 'Cherrywood'],\n        ['652DC1', 'Purple Heart'],\n        ['657220', 'Fern Frond'],\n        ['65745D', 'Willow Grove'],\n        ['65869F', 'Hoki'],\n        ['660045', 'Pompadour'],\n        ['660099', 'Purple'],\n        ['66023C', 'Tyrian Purple'],\n        ['661010', 'Dark Tan'],\n        ['66B58F', 'Silver Tree'],\n        ['66FF00', 'Bright Green'],\n        ['66FF66', \"Screamin' Green\"],\n        ['67032D', 'Black Rose'],\n        ['675FA6', 'Scampi'],\n        ['676662', 'Ironside Gray'],\n        ['678975', 'Viridian Green'],\n        ['67A712', 'Christi'],\n        ['683600', 'Nutmeg Wood Finish'],\n        ['685558', 'Zambezi'],\n        ['685E6E', 'Salt Box'],\n        ['692545', 'Tawny Port'],\n        ['692D54', 'Finn'],\n        ['695F62', 'Scorpion'],\n        ['697E9A', 'Lynch'],\n        ['6A442E', 'Spice'],\n        ['6A5D1B', 'Himalaya'],\n        ['6A6051', 'Soya Bean'],\n        ['6B2A14', 'Hairy Heath'],\n        ['6B3FA0', 'Royal Purple'],\n        ['6B4E31', 'Shingle Fawn'],\n        ['6B5755', 'Dorado'],\n        ['6B8BA2', 'Bermuda Gray'],\n        ['6B8E23', 'Olive Drab'],\n        ['6C3082', 'Eminence'],\n        ['6CDAE7', 'Turquoise Blue'],\n        ['6D0101', 'Lonestar'],\n        ['6D5E54', 'Pine Cone'],\n        ['6D6C6C', 'Dove Gray'],\n        ['6D9292', 'Juniper'],\n        ['6D92A1', 'Gothic'],\n        ['6E0902', 'Red Oxide'],\n        ['6E1D14', 'Moccaccino'],\n        ['6E4826', 'Pickled Bean'],\n        ['6E4B26', 'Dallas'],\n        ['6E6D57', 'Kokoda'],\n        ['6E7783', 'Pale Sky'],\n        ['6F440C', 'Cafe Royale'],\n        ['6F6A61', 'Flint'],\n        ['6F8E63', 'Highland'],\n        ['6F9D02', 'Limeade'],\n        ['6FD0C5', 'Downy'],\n        ['701C1C', 'Persian Plum'],\n        ['704214', 'Sepia'],\n        ['704A07', 'Antique Bronze'],\n        ['704F50', 'Ferra'],\n        ['706555', 'Coffee'],\n        ['708090', 'Slate Gray'],\n        ['711A00', 'Cedar Wood Finish'],\n        ['71291D', 'Metallic Copper'],\n        ['714693', 'Affair'],\n        ['714AB2', 'Studio'],\n        ['715D47', 'Tobacco Brown'],\n        ['716338', 'Yellow Metal'],\n        ['716B56', 'Peat'],\n        ['716E10', 'Olivetone'],\n        ['717486', 'Storm Gray'],\n        ['718080', 'Sirocco'],\n        ['71D9E2', 'Aquamarine Blue'],\n        ['72010F', 'Venetian Red'],\n        ['724A2F', 'Old Copper'],\n        ['726D4E', 'Go Ben'],\n        ['727B89', 'Raven'],\n        ['731E8F', 'Seance'],\n        ['734A12', 'Raw Umber'],\n        ['736C9F', 'Kimberly'],\n        ['736D58', 'Crocodile'],\n        ['737829', 'Crete'],\n        ['738678', 'Xanadu'],\n        ['74640D', 'Spicy Mustard'],\n        ['747D63', 'Limed Ash'],\n        ['747D83', 'Rolling Stone'],\n        ['748881', 'Blue Smoke'],\n        ['749378', 'Laurel'],\n        ['74C365', 'Mantis'],\n        ['755A57', 'Russett'],\n        ['7563A8', 'Deluge'],\n        ['76395D', 'Cosmic'],\n        ['7666C6', 'Blue Marguerite'],\n        ['76BD17', 'Lima'],\n        ['76D7EA', 'Sky Blue'],\n        ['770F05', 'Dark Burgundy'],\n        ['771F1F', 'Crown of Thorns'],\n        ['773F1A', 'Walnut'],\n        ['776F61', 'Pablo'],\n        ['778120', 'Pacifika'],\n        ['779E86', 'Oxley'],\n        ['77DD77', 'Pastel Green'],\n        ['780109', 'Japanese Maple'],\n        ['782D19', 'Mocha'],\n        ['782F16', 'Peanut'],\n        ['78866B', 'Camouflage Green'],\n        ['788A25', 'Wasabi'],\n        ['788BBA', 'Ship Cove'],\n        ['78A39C', 'Sea Nymph'],\n        ['795D4C', 'Roman Coffee'],\n        ['796878', 'Old Lavender'],\n        ['796989', 'Rum'],\n        ['796A78', 'Fedora'],\n        ['796D62', 'Sandstone'],\n        ['79DEEC', 'Spray'],\n        ['7A013A', 'Siren'],\n        ['7A58C1', 'Fuchsia Blue'],\n        ['7A7A7A', 'Boulder'],\n        ['7A89B8', 'Wild Blue Yonder'],\n        ['7AC488', 'De York'],\n        ['7B3801', 'Red Beech'],\n        ['7B3F00', 'Cinnamon'],\n        ['7B6608', 'Yukon Gold'],\n        ['7B7874', 'Tapa'],\n        ['7B7C94', 'Waterloo '],\n        ['7B8265', 'Flax Smoke'],\n        ['7B9F80', 'Amulet'],\n        ['7BA05B', 'Asparagus'],\n        ['7C1C05', 'Kenyan Copper'],\n        ['7C7631', 'Pesto'],\n        ['7C778A', 'Topaz'],\n        ['7C7B7A', 'Concord'],\n        ['7C7B82', 'Jumbo'],\n        ['7C881A', 'Trendy Green'],\n        ['7CA1A6', 'Gumbo'],\n        ['7CB0A1', 'Acapulco'],\n        ['7CB7BB', 'Neptune'],\n        ['7D2C14', 'Pueblo'],\n        ['7DA98D', 'Bay Leaf'],\n        ['7DC8F7', 'Malibu'],\n        ['7DD8C6', 'Bermuda'],\n        ['7E3A15', 'Copper Canyon'],\n        ['7F1734', 'Claret'],\n        ['7F3A02', 'Peru Tan'],\n        ['7F626D', 'Falcon'],\n        ['7F7589', 'Mobster'],\n        ['7F76D3', 'Moody Blue'],\n        ['7FFF00', 'Chartreuse'],\n        ['7FFFD4', 'Aquamarine'],\n        ['800000', 'Maroon'],\n        ['800B47', 'Rose Bud Cherry'],\n        ['801818', 'Falu Red'],\n        ['80341F', 'Red Robin'],\n        ['803790', 'Vivid Violet'],\n        ['80461B', 'Russet'],\n        ['807E79', 'Friar Gray'],\n        ['808000', 'Olive'],\n        ['808080', 'Gray'],\n        ['80B3AE', 'Gulf Stream'],\n        ['80B3C4', 'Glacier'],\n        ['80CCEA', 'Seagull'],\n        ['81422C', 'Nutmeg'],\n        ['816E71', 'Spicy Pink'],\n        ['817377', 'Empress'],\n        ['819885', 'Spanish Green'],\n        ['826F65', 'Sand Dune'],\n        ['828685', 'Gunsmoke'],\n        ['828F72', 'Battleship Gray'],\n        ['831923', 'Merlot'],\n        ['837050', 'Shadow'],\n        ['83AA5D', 'Chelsea Cucumber'],\n        ['83D0C6', 'Monte Carlo'],\n        ['843179', 'Plum'],\n        ['84A0A0', 'Granny Smith'],\n        ['8581D9', 'Chetwode Blue'],\n        ['858470', 'Bandicoot'],\n        ['859FAF', 'Bali Hai'],\n        ['85C4CC', 'Half Baked'],\n        ['860111', 'Red Devil'],\n        ['863C3C', 'Lotus'],\n        ['86483C', 'Ironstone'],\n        ['864D1E', 'Bull Shot'],\n        ['86560A', 'Rusty Nail'],\n        ['868974', 'Bitter'],\n        ['86949F', 'Regent Gray'],\n        ['871550', 'Disco'],\n        ['87756E', 'Americano'],\n        ['877C7B', 'Hurricane'],\n        ['878D91', 'Oslo Gray'],\n        ['87AB39', 'Sushi'],\n        ['885342', 'Spicy Mix'],\n        ['886221', 'Kumera'],\n        ['888387', 'Suva Gray'],\n        ['888D65', 'Avocado'],\n        ['893456', 'Camelot'],\n        ['893843', 'Solid Pink'],\n        ['894367', 'Cannon Pink'],\n        ['897D6D', 'Makara'],\n        ['8A3324', 'Burnt Umber'],\n        ['8A73D6', 'True V'],\n        ['8A8360', 'Clay Creek'],\n        ['8A8389', 'Monsoon'],\n        ['8A8F8A', 'Stack'],\n        ['8AB9F1', 'Jordy Blue'],\n        ['8B00FF', 'Electric Violet'],\n        ['8B0723', 'Monarch'],\n        ['8B6B0B', 'Corn Harvest'],\n        ['8B8470', 'Olive Haze'],\n        ['8B847E', 'Schooner'],\n        ['8B8680', 'Natural Gray'],\n        ['8B9C90', 'Mantle'],\n        ['8B9FEE', 'Portage'],\n        ['8BA690', 'Envy'],\n        ['8BA9A5', 'Cascade'],\n        ['8BE6D8', 'Riptide'],\n        ['8C055E', 'Cardinal Pink'],\n        ['8C472F', 'Mule Fawn'],\n        ['8C5738', 'Potters Clay'],\n        ['8C6495', 'Trendy Pink'],\n        ['8D0226', 'Paprika'],\n        ['8D3D38', 'Sanguine Brown'],\n        ['8D3F3F', 'Tosca'],\n        ['8D7662', 'Cement'],\n        ['8D8974', 'Granite Green'],\n        ['8D90A1', 'Manatee'],\n        ['8DA8CC', 'Polo Blue'],\n        ['8E0000', 'Red Berry'],\n        ['8E4D1E', 'Rope'],\n        ['8E6F70', 'Opium'],\n        ['8E775E', 'Domino'],\n        ['8E8190', 'Mamba'],\n        ['8EABC1', 'Nepal'],\n        ['8F021C', 'Pohutukawa'],\n        ['8F3E33', 'El Salva'],\n        ['8F4B0E', 'Korma'],\n        ['8F8176', 'Squirrel'],\n        ['8FD6B4', 'Vista Blue'],\n        ['900020', 'Burgundy'],\n        ['901E1E', 'Old Brick'],\n        ['907874', 'Hemp'],\n        ['907B71', 'Almond Frost'],\n        ['908D39', 'Sycamore'],\n        ['92000A', 'Sangria'],\n        ['924321', 'Cumin'],\n        ['926F5B', 'Beaver'],\n        ['928573', 'Stonewall'],\n        ['928590', 'Venus'],\n        ['9370DB', 'Medium Purple'],\n        ['93CCEA', 'Cornflower'],\n        ['93DFB8', 'Algae Green'],\n        ['944747', 'Copper Rust'],\n        ['948771', 'Arrowtown'],\n        ['950015', 'Scarlett'],\n        ['956387', 'Strikemaster'],\n        ['959396', 'Mountain Mist'],\n        ['960018', 'Carmine'],\n        ['964B00', 'Brown'],\n        ['967059', 'Leather'],\n        ['9678B6', \"Purple Mountain's Majesty\"],\n        ['967BB6', 'Lavender Purple'],\n        ['96A8A1', 'Pewter'],\n        ['96BBAB', 'Summer Green'],\n        ['97605D', 'Au Chico'],\n        ['9771B5', 'Wisteria'],\n        ['97CD2D', 'Atlantis'],\n        ['983D61', 'Vin Rouge'],\n        ['9874D3', 'Lilac Bush'],\n        ['98777B', 'Bazaar'],\n        ['98811B', 'Hacienda'],\n        ['988D77', 'Pale Oyster'],\n        ['98FF98', 'Mint Green'],\n        ['990066', 'Fresh Eggplant'],\n        ['991199', 'Violet Eggplant'],\n        ['991613', 'Tamarillo'],\n        ['991B07', 'Totem Pole'],\n        ['996666', 'Copper Rose'],\n        ['9966CC', 'Amethyst'],\n        ['997A8D', 'Mountbatten Pink'],\n        ['9999CC', 'Blue Bell'],\n        ['9A3820', 'Prairie Sand'],\n        ['9A6E61', 'Toast'],\n        ['9A9577', 'Gurkha'],\n        ['9AB973', 'Olivine'],\n        ['9AC2B8', 'Shadow Green'],\n        ['9B4703', 'Oregon'],\n        ['9B9E8F', 'Lemon Grass'],\n        ['9C3336', 'Stiletto'],\n        ['9D5616', 'Hawaiian Tan'],\n        ['9DACB7', 'Gull Gray'],\n        ['9DC209', 'Pistachio'],\n        ['9DE093', 'Granny Smith Apple'],\n        ['9DE5FF', 'Anakiwa'],\n        ['9E5302', 'Chelsea Gem'],\n        ['9E5B40', 'Sepia Skin'],\n        ['9EA587', 'Sage'],\n        ['9EA91F', 'Citron'],\n        ['9EB1CD', 'Rock Blue'],\n        ['9EDEE0', 'Morning Glory'],\n        ['9F381D', 'Cognac'],\n        ['9F821C', 'Reef Gold'],\n        ['9F9F9C', 'Star Dust'],\n        ['9FA0B1', 'Santas Gray'],\n        ['9FD7D3', 'Sinbad'],\n        ['9FDD8C', 'Feijoa'],\n        ['A02712', 'Tabasco'],\n        ['A1750D', 'Buttered Rum'],\n        ['A1ADB5', 'Hit Gray'],\n        ['A1C50A', 'Citrus'],\n        ['A1DAD7', 'Aqua Island'],\n        ['A1E9DE', 'Water Leaf'],\n        ['A2006D', 'Flirt'],\n        ['A23B6C', 'Rouge'],\n        ['A26645', 'Cape Palliser'],\n        ['A2AAB3', 'Gray Chateau'],\n        ['A2AEAB', 'Edward'],\n        ['A3807B', 'Pharlap'],\n        ['A397B4', 'Amethyst Smoke'],\n        ['A3E3ED', 'Blizzard Blue'],\n        ['A4A49D', 'Delta'],\n        ['A4A6D3', 'Wistful'],\n        ['A4AF6E', 'Green Smoke'],\n        ['A50B5E', 'Jazzberry Jam'],\n        ['A59B91', 'Zorba'],\n        ['A5CB0C', 'Bahia'],\n        ['A62F20', 'Roof Terracotta'],\n        ['A65529', 'Paarl'],\n        ['A68B5B', 'Barley Corn'],\n        ['A69279', 'Donkey Brown'],\n        ['A6A29A', 'Dawn'],\n        ['A72525', 'Mexican Red'],\n        ['A7882C', 'Luxor Gold'],\n        ['A85307', 'Rich Gold'],\n        ['A86515', 'Reno Sand'],\n        ['A86B6B', 'Coral Tree'],\n        ['A8989B', 'Dusty Gray'],\n        ['A899E6', 'Dull Lavender'],\n        ['A8A589', 'Tallow'],\n        ['A8AE9C', 'Bud'],\n        ['A8AF8E', 'Locust'],\n        ['A8BD9F', 'Norway'],\n        ['A8E3BD', 'Chinook'],\n        ['A9A491', 'Gray Olive'],\n        ['A9ACB6', 'Aluminium'],\n        ['A9B2C3', 'Cadet Blue'],\n        ['A9B497', 'Schist'],\n        ['A9BDBF', 'Tower Gray'],\n        ['A9BEF2', 'Perano'],\n        ['A9C6C2', 'Opal'],\n        ['AA375A', 'Night Shadz'],\n        ['AA4203', 'Fire'],\n        ['AA8B5B', 'Muesli'],\n        ['AA8D6F', 'Sandal'],\n        ['AAA5A9', 'Shady Lady'],\n        ['AAA9CD', 'Logan'],\n        ['AAABB7', 'Spun Pearl'],\n        ['AAD6E6', 'Regent St Blue'],\n        ['AAF0D1', 'Magic Mint'],\n        ['AB0563', 'Lipstick'],\n        ['AB3472', 'Royal Heath'],\n        ['AB917A', 'Sandrift'],\n        ['ABA0D9', 'Cold Purple'],\n        ['ABA196', 'Bronco'],\n        ['AC8A56', 'Limed Oak'],\n        ['AC91CE', 'East Side'],\n        ['AC9E22', 'Lemon Ginger'],\n        ['ACA494', 'Napa'],\n        ['ACA586', 'Hillary'],\n        ['ACA59F', 'Cloudy'],\n        ['ACACAC', 'Silver Chalice'],\n        ['ACB78E', 'Swamp Green'],\n        ['ACCBB1', 'Spring Rain'],\n        ['ACDD4D', 'Conifer'],\n        ['ACE1AF', 'Celadon'],\n        ['AD781B', 'Mandalay'],\n        ['ADBED1', 'Casper'],\n        ['ADDFAD', 'Moss Green'],\n        ['ADE6C4', 'Padua'],\n        ['ADFF2F', 'Green Yellow'],\n        ['AE4560', 'Hippie Pink'],\n        ['AE6020', 'Desert'],\n        ['AE809E', 'Bouquet'],\n        ['AF4035', 'Medium Carmine'],\n        ['AF4D43', 'Apple Blossom'],\n        ['AF593E', 'Brown Rust'],\n        ['AF8751', 'Driftwood'],\n        ['AF8F2C', 'Alpine'],\n        ['AF9F1C', 'Lucky'],\n        ['AFA09E', 'Martini'],\n        ['AFB1B8', 'Bombay'],\n        ['AFBDD9', 'Pigeon Post'],\n        ['B04C6A', 'Cadillac'],\n        ['B05D54', 'Matrix'],\n        ['B05E81', 'Tapestry'],\n        ['B06608', 'Mai Tai'],\n        ['B09A95', 'Del Rio'],\n        ['B0E0E6', 'Powder Blue'],\n        ['B0E313', 'Inch Worm'],\n        ['B10000', 'Bright Red'],\n        ['B14A0B', 'Vesuvius'],\n        ['B1610B', 'Pumpkin Skin'],\n        ['B16D52', 'Santa Fe'],\n        ['B19461', 'Teak'],\n        ['B1E2C1', 'Fringy Flower'],\n        ['B1F4E7', 'Ice Cold'],\n        ['B20931', 'Shiraz'],\n        ['B2A1EA', 'Biloba Flower'],\n        ['B32D29', 'Tall Poppy'],\n        ['B35213', 'Fiery Orange'],\n        ['B38007', 'Hot Toddy'],\n        ['B3AF95', 'Taupe Gray'],\n        ['B3C110', 'La Rioja'],\n        ['B43332', 'Well Read'],\n        ['B44668', 'Blush'],\n        ['B4CFD3', 'Jungle Mist'],\n        ['B57281', 'Turkish Rose'],\n        ['B57EDC', 'Lavender'],\n        ['B5A27F', 'Mongoose'],\n        ['B5B35C', 'Olive Green'],\n        ['B5D2CE', 'Jet Stream'],\n        ['B5ECDF', 'Cruise'],\n        ['B6316C', 'Hibiscus'],\n        ['B69D98', 'Thatch'],\n        ['B6B095', 'Heathered Gray'],\n        ['B6BAA4', 'Eagle'],\n        ['B6D1EA', 'Spindle'],\n        ['B6D3BF', 'Gum Leaf'],\n        ['B7410E', 'Rust'],\n        ['B78E5C', 'Muddy Waters'],\n        ['B7A214', 'Sahara'],\n        ['B7A458', 'Husk'],\n        ['B7B1B1', 'Nobel'],\n        ['B7C3D0', 'Heather'],\n        ['B7F0BE', 'Madang'],\n        ['B81104', 'Milano Red'],\n        ['B87333', 'Copper'],\n        ['B8B56A', 'Gimblet'],\n        ['B8C1B1', 'Green Spring'],\n        ['B8C25D', 'Celery'],\n        ['B8E0F9', 'Sail'],\n        ['B94E48', 'Chestnut'],\n        ['B95140', 'Crail'],\n        ['B98D28', 'Marigold'],\n        ['B9C46A', 'Wild Willow'],\n        ['B9C8AC', 'Rainee'],\n        ['BA0101', 'Guardsman Red'],\n        ['BA450C', 'Rock Spray'],\n        ['BA6F1E', 'Bourbon'],\n        ['BA7F03', 'Pirate Gold'],\n        ['BAB1A2', 'Nomad'],\n        ['BAC7C9', 'Submarine'],\n        ['BAEEF9', 'Charlotte'],\n        ['BB3385', 'Medium Red Violet'],\n        ['BB8983', 'Brandy Rose'],\n        ['BBD009', 'Rio Grande'],\n        ['BBD7C1', 'Surf'],\n        ['BCC9C2', 'Powder Ash'],\n        ['BD5E2E', 'Tuscany'],\n        ['BD978E', 'Quicksand'],\n        ['BDB1A8', 'Silk'],\n        ['BDB2A1', 'Malta'],\n        ['BDB3C7', 'Chatelle'],\n        ['BDBBD7', 'Lavender Gray'],\n        ['BDBDC6', 'French Gray'],\n        ['BDC8B3', 'Clay Ash'],\n        ['BDC9CE', 'Loblolly'],\n        ['BDEDFD', 'French Pass'],\n        ['BEA6C3', 'London Hue'],\n        ['BEB5B7', 'Pink Swan'],\n        ['BEDE0D', 'Fuego'],\n        ['BF5500', 'Rose of Sharon'],\n        ['BFB8B0', 'Tide'],\n        ['BFBED8', 'Blue Haze'],\n        ['BFC1C2', 'Silver Sand'],\n        ['BFC921', 'Key Lime Pie'],\n        ['BFDBE2', 'Ziggurat'],\n        ['BFFF00', 'Lime'],\n        ['C02B18', 'Thunderbird'],\n        ['C04737', 'Mojo'],\n        ['C08081', 'Old Rose'],\n        ['C0C0C0', 'Silver'],\n        ['C0D3B9', 'Pale Leaf'],\n        ['C0D8B6', 'Pixie Green'],\n        ['C1440E', 'Tia Maria'],\n        ['C154C1', 'Fuchsia Pink'],\n        ['C1A004', 'Buddha Gold'],\n        ['C1B7A4', 'Bison Hide'],\n        ['C1BAB0', 'Tea'],\n        ['C1BECD', 'Gray Suit'],\n        ['C1D7B0', 'Sprout'],\n        ['C1F07C', 'Sulu'],\n        ['C26B03', 'Indochine'],\n        ['C2955D', 'Twine'],\n        ['C2BDB6', 'Cotton Seed'],\n        ['C2CAC4', 'Pumice'],\n        ['C2E8E5', 'Jagged Ice'],\n        ['C32148', 'Maroon Flush'],\n        ['C3B091', 'Indian Khaki'],\n        ['C3BFC1', 'Pale Slate'],\n        ['C3C3BD', 'Gray Nickel'],\n        ['C3CDE6', 'Periwinkle Gray'],\n        ['C3D1D1', 'Tiara'],\n        ['C3DDF9', 'Tropical Blue'],\n        ['C41E3A', 'Cardinal'],\n        ['C45655', 'Fuzzy Wuzzy Brown'],\n        ['C45719', 'Orange Roughy'],\n        ['C4C4BC', 'Mist Gray'],\n        ['C4D0B0', 'Coriander'],\n        ['C4F4EB', 'Mint Tulip'],\n        ['C54B8C', 'Mulberry'],\n        ['C59922', 'Nugget'],\n        ['C5994B', 'Tussock'],\n        ['C5DBCA', 'Sea Mist'],\n        ['C5E17A', 'Yellow Green'],\n        ['C62D42', 'Brick Red'],\n        ['C6726B', 'Contessa'],\n        ['C69191', 'Oriental Pink'],\n        ['C6A84B', 'Roti'],\n        ['C6C3B5', 'Ash'],\n        ['C6C8BD', 'Kangaroo'],\n        ['C6E610', 'Las Palmas'],\n        ['C7031E', 'Monza'],\n        ['C71585', 'Red Violet'],\n        ['C7BCA2', 'Coral Reef'],\n        ['C7C1FF', 'Melrose'],\n        ['C7C4BF', 'Cloud'],\n        ['C7C9D5', 'Ghost'],\n        ['C7CD90', 'Pine Glade'],\n        ['C7DDE5', 'Botticelli'],\n        ['C88A65', 'Antique Brass'],\n        ['C8A2C8', 'Lilac'],\n        ['C8A528', 'Hokey Pokey'],\n        ['C8AABF', 'Lily'],\n        ['C8B568', 'Laser'],\n        ['C8E3D7', 'Edgewater'],\n        ['C96323', 'Piper'],\n        ['C99415', 'Pizza'],\n        ['C9A0DC', 'Light Wisteria'],\n        ['C9B29B', 'Rodeo Dust'],\n        ['C9B35B', 'Sundance'],\n        ['C9B93B', 'Earls Green'],\n        ['C9C0BB', 'Silver Rust'],\n        ['C9D9D2', 'Conch'],\n        ['C9FFA2', 'Reef'],\n        ['C9FFE5', 'Aero Blue'],\n        ['CA3435', 'Flush Mahogany'],\n        ['CABB48', 'Turmeric'],\n        ['CADCD4', 'Paris White'],\n        ['CAE00D', 'Bitter Lemon'],\n        ['CAE6DA', 'Skeptic'],\n        ['CB8FA9', 'Viola'],\n        ['CBCAB6', 'Foggy Gray'],\n        ['CBD3B0', 'Green Mist'],\n        ['CBDBD6', 'Nebula'],\n        ['CC3333', 'Persian Red'],\n        ['CC5500', 'Burnt Orange'],\n        ['CC7722', 'Ochre'],\n        ['CC8899', 'Puce'],\n        ['CCCAA8', 'Thistle Green'],\n        ['CCCCFF', 'Periwinkle'],\n        ['CCFF00', 'Electric Lime'],\n        ['CD5700', 'Tenn'],\n        ['CD5C5C', 'Chestnut Rose'],\n        ['CD8429', 'Brandy Punch'],\n        ['CDF4FF', 'Onahau'],\n        ['CEB98F', 'Sorrell Brown'],\n        ['CEBABA', 'Cold Turkey'],\n        ['CEC291', 'Yuma'],\n        ['CEC7A7', 'Chino'],\n        ['CFA39D', 'Eunry'],\n        ['CFB53B', 'Old Gold'],\n        ['CFDCCF', 'Tasman'],\n        ['CFE5D2', 'Surf Crest'],\n        ['CFF9F3', 'Humming Bird'],\n        ['CFFAF4', 'Scandal'],\n        ['D05F04', 'Red Stage'],\n        ['D06DA1', 'Hopbush'],\n        ['D07D12', 'Meteor'],\n        ['D0BEF8', 'Perfume'],\n        ['D0C0E5', 'Prelude'],\n        ['D0F0C0', 'Tea Green'],\n        ['D18F1B', 'Geebung'],\n        ['D1BEA8', 'Vanilla'],\n        ['D1C6B4', 'Soft Amber'],\n        ['D1D2CA', 'Celeste'],\n        ['D1D2DD', 'Mischka'],\n        ['D1E231', 'Pear'],\n        ['D2691E', 'Hot Cinnamon'],\n        ['D27D46', 'Raw Sienna'],\n        ['D29EAA', 'Careys Pink'],\n        ['D2B48C', 'Tan'],\n        ['D2DA97', 'Deco'],\n        ['D2F6DE', 'Blue Romance'],\n        ['D2F8B0', 'Gossip'],\n        ['D3CBBA', 'Sisal'],\n        ['D3CDC5', 'Swirl'],\n        ['D47494', 'Charm'],\n        ['D4B6AF', 'Clam Shell'],\n        ['D4BF8D', 'Straw'],\n        ['D4C4A8', 'Akaroa'],\n        ['D4CD16', 'Bird Flower'],\n        ['D4D7D9', 'Iron'],\n        ['D4DFE2', 'Geyser'],\n        ['D4E2FC', 'Hawkes Blue'],\n        ['D54600', 'Grenadier'],\n        ['D591A4', 'Can Can'],\n        ['D59A6F', 'Whiskey'],\n        ['D5D195', 'Winter Hazel'],\n        ['D5F6E3', 'Granny Apple'],\n        ['D69188', 'My Pink'],\n        ['D6C562', 'Tacha'],\n        ['D6CEF6', 'Moon Raker'],\n        ['D6D6D1', 'Quill Gray'],\n        ['D6FFDB', 'Snowy Mint'],\n        ['D7837F', 'New York Pink'],\n        ['D7C498', 'Pavlova'],\n        ['D7D0FF', 'Fog'],\n        ['D84437', 'Valencia'],\n        ['D87C63', 'Japonica'],\n        ['D8BFD8', 'Thistle'],\n        ['D8C2D5', 'Maverick'],\n        ['D8FCFA', 'Foam'],\n        ['D94972', 'Cabaret'],\n        ['D99376', 'Burning Sand'],\n        ['D9B99B', 'Cameo'],\n        ['D9D6CF', 'Timberwolf'],\n        ['D9DCC1', 'Tana'],\n        ['D9E4F5', 'Link Water'],\n        ['D9F7FF', 'Mabel'],\n        ['DA3287', 'Cerise'],\n        ['DA5B38', 'Flame Pea'],\n        ['DA6304', 'Bamboo'],\n        ['DA6A41', 'Red Damask'],\n        ['DA70D6', 'Orchid'],\n        ['DA8A67', 'Copperfield'],\n        ['DAA520', 'Golden Grass'],\n        ['DAECD6', 'Zanah'],\n        ['DAF4F0', 'Iceberg'],\n        ['DAFAFF', 'Oyster Bay'],\n        ['DB5079', 'Cranberry'],\n        ['DB9690', 'Petite Orchid'],\n        ['DB995E', 'Di Serria'],\n        ['DBDBDB', 'Alto'],\n        ['DBFFF8', 'Frosted Mint'],\n        ['DC143C', 'Crimson'],\n        ['DC4333', 'Punch'],\n        ['DCB20C', 'Galliano'],\n        ['DCB4BC', 'Blossom'],\n        ['DCD747', 'Wattle'],\n        ['DCD9D2', 'Westar'],\n        ['DCDDCC', 'Moon Mist'],\n        ['DCEDB4', 'Caper'],\n        ['DCF0EA', 'Swans Down'],\n        ['DDD6D5', 'Swiss Coffee'],\n        ['DDF9F1', 'White Ice'],\n        ['DE3163', 'Cerise Red'],\n        ['DE6360', 'Roman'],\n        ['DEA681', 'Tumbleweed'],\n        ['DEBA13', 'Gold Tips'],\n        ['DEC196', 'Brandy'],\n        ['DECBC6', 'Wafer'],\n        ['DED4A4', 'Sapling'],\n        ['DED717', 'Barberry'],\n        ['DEE5C0', 'Beryl Green'],\n        ['DEF5FF', 'Pattens Blue'],\n        ['DF73FF', 'Heliotrope'],\n        ['DFBE6F', 'Apache'],\n        ['DFCD6F', 'Chenin'],\n        ['DFCFDB', 'Lola'],\n        ['DFECDA', 'Willow Brook'],\n        ['DFFF00', 'Chartreuse Yellow'],\n        ['E0B0FF', 'Mauve'],\n        ['E0B646', 'Anzac'],\n        ['E0B974', 'Harvest Gold'],\n        ['E0C095', 'Calico'],\n        ['E0FFFF', 'Baby Blue'],\n        ['E16865', 'Sunglo'],\n        ['E1BC64', 'Equator'],\n        ['E1C0C8', 'Pink Flare'],\n        ['E1E6D6', 'Periglacial Blue'],\n        ['E1EAD4', 'Kidnapper'],\n        ['E1F6E8', 'Tara'],\n        ['E25465', 'Mandy'],\n        ['E2725B', 'Terracotta'],\n        ['E28913', 'Golden Bell'],\n        ['E292C0', 'Shocking'],\n        ['E29418', 'Dixie'],\n        ['E29CD2', 'Light Orchid'],\n        ['E2D8ED', 'Snuff'],\n        ['E2EBED', 'Mystic'],\n        ['E2F3EC', 'Apple Green'],\n        ['E30B5C', 'Razzmatazz'],\n        ['E32636', 'Alizarin Crimson'],\n        ['E34234', 'Cinnabar'],\n        ['E3BEBE', 'Cavern Pink'],\n        ['E3F5E1', 'Peppermint'],\n        ['E3F988', 'Mindaro'],\n        ['E47698', 'Deep Blush'],\n        ['E49B0F', 'Gamboge'],\n        ['E4C2D5', 'Melanie'],\n        ['E4CFDE', 'Twilight'],\n        ['E4D1C0', 'Bone'],\n        ['E4D422', 'Sunflower'],\n        ['E4D5B7', 'Grain Brown'],\n        ['E4D69B', 'Zombie'],\n        ['E4F6E7', 'Frostee'],\n        ['E4FFD1', 'Snow Flurry'],\n        ['E52B50', 'Amaranth'],\n        ['E5841B', 'Zest'],\n        ['E5CCC9', 'Dust Storm'],\n        ['E5D7BD', 'Stark White'],\n        ['E5D8AF', 'Hampton'],\n        ['E5E0E1', 'Bon Jour'],\n        ['E5E5E5', 'Mercury'],\n        ['E5F9F6', 'Polar'],\n        ['E64E03', 'Trinidad'],\n        ['E6BE8A', 'Gold Sand'],\n        ['E6BEA5', 'Cashmere'],\n        ['E6D7B9', 'Double Spanish White'],\n        ['E6E4D4', 'Satin Linen'],\n        ['E6F2EA', 'Harp'],\n        ['E6F8F3', 'Off Green'],\n        ['E6FFE9', 'Hint of Green'],\n        ['E6FFFF', 'Tranquil'],\n        ['E77200', 'Mango Tango'],\n        ['E7730A', 'Christine'],\n        ['E79F8C', 'Tonys Pink'],\n        ['E79FC4', 'Kobi'],\n        ['E7BCB4', 'Rose Fog'],\n        ['E7BF05', 'Corn'],\n        ['E7CD8C', 'Putty'],\n        ['E7ECE6', 'Gray Nurse'],\n        ['E7F8FF', 'Lily White'],\n        ['E7FEFF', 'Bubbles'],\n        ['E89928', 'Fire Bush'],\n        ['E8B9B3', 'Shilo'],\n        ['E8E0D5', 'Pearl Bush'],\n        ['E8EBE0', 'Green White'],\n        ['E8F1D4', 'Chrome White'],\n        ['E8F2EB', 'Gin'],\n        ['E8F5F2', 'Aqua Squeeze'],\n        ['E96E00', 'Clementine'],\n        ['E97451', 'Burnt Sienna'],\n        ['E97C07', 'Tahiti Gold'],\n        ['E9CECD', 'Oyster Pink'],\n        ['E9D75A', 'Confetti'],\n        ['E9E3E3', 'Ebb'],\n        ['E9F8ED', 'Ottoman'],\n        ['E9FFFD', 'Clear Day'],\n        ['EA88A8', 'Carissma'],\n        ['EAAE69', 'Porsche'],\n        ['EAB33B', 'Tulip Tree'],\n        ['EAC674', 'Rob Roy'],\n        ['EADAB8', 'Raffia'],\n        ['EAE8D4', 'White Rock'],\n        ['EAF6EE', 'Panache'],\n        ['EAF6FF', 'Solitude'],\n        ['EAF9F5', 'Aqua Spring'],\n        ['EAFFFE', 'Dew'],\n        ['EB9373', 'Apricot'],\n        ['EBC2AF', 'Zinnwaldite'],\n        ['ECA927', 'Fuel Yellow'],\n        ['ECC54E', 'Ronchi'],\n        ['ECC7EE', 'French Lilac'],\n        ['ECCDB9', 'Just Right'],\n        ['ECE090', 'Wild Rice'],\n        ['ECEBBD', 'Fall Green'],\n        ['ECEBCE', 'Aths Special'],\n        ['ECF245', 'Starship'],\n        ['ED0A3F', 'Red Ribbon'],\n        ['ED7A1C', 'Tango'],\n        ['ED9121', 'Carrot Orange'],\n        ['ED989E', 'Sea Pink'],\n        ['EDB381', 'Tacao'],\n        ['EDC9AF', 'Desert Sand'],\n        ['EDCDAB', 'Pancho'],\n        ['EDDCB1', 'Chamois'],\n        ['EDEA99', 'Primrose'],\n        ['EDF5DD', 'Frost'],\n        ['EDF5F5', 'Aqua Haze'],\n        ['EDF6FF', 'Zumthor'],\n        ['EDF9F1', 'Narvik'],\n        ['EDFC84', 'Honeysuckle'],\n        ['EE82EE', 'Lavender Magenta'],\n        ['EEC1BE', 'Beauty Bush'],\n        ['EED794', 'Chalky'],\n        ['EED9C4', 'Almond'],\n        ['EEDC82', 'Flax'],\n        ['EEDEDA', 'Bizarre'],\n        ['EEE3AD', 'Double Colonial White'],\n        ['EEEEE8', 'Cararra'],\n        ['EEEF78', 'Manz'],\n        ['EEF0C8', 'Tahuna Sands'],\n        ['EEF0F3', 'Athens Gray'],\n        ['EEF3C3', 'Tusk'],\n        ['EEF4DE', 'Loafer'],\n        ['EEF6F7', 'Catskill White'],\n        ['EEFDFF', 'Twilight Blue'],\n        ['EEFF9A', 'Jonquil'],\n        ['EEFFE2', 'Rice Flower'],\n        ['EF863F', 'Jaffa'],\n        ['EFEFEF', 'Gallery'],\n        ['EFF2F3', 'Porcelain'],\n        ['F091A9', 'Mauvelous'],\n        ['F0D52D', 'Golden Dream'],\n        ['F0DB7D', 'Golden Sand'],\n        ['F0DC82', 'Buff'],\n        ['F0E2EC', 'Prim'],\n        ['F0E68C', 'Khaki'],\n        ['F0EEFD', 'Selago'],\n        ['F0EEFF', 'Titan White'],\n        ['F0F8FF', 'Alice Blue'],\n        ['F0FCEA', 'Feta'],\n        ['F18200', 'Gold Drop'],\n        ['F19BAB', 'Wewak'],\n        ['F1E788', 'Sahara Sand'],\n        ['F1E9D2', 'Parchment'],\n        ['F1E9FF', 'Blue Chalk'],\n        ['F1EEC1', 'Mint Julep'],\n        ['F1F1F1', 'Seashell'],\n        ['F1F7F2', 'Saltpan'],\n        ['F1FFAD', 'Tidal'],\n        ['F1FFC8', 'Chiffon'],\n        ['F2552A', 'Flamingo'],\n        ['F28500', 'Tangerine'],\n        ['F2C3B2', 'Mandys Pink'],\n        ['F2F2F2', 'Concrete'],\n        ['F2FAFA', 'Black Squeeze'],\n        ['F34723', 'Pomegranate'],\n        ['F3AD16', 'Buttercup'],\n        ['F3D69D', 'New Orleans'],\n        ['F3D9DF', 'Vanilla Ice'],\n        ['F3E7BB', 'Sidecar'],\n        ['F3E9E5', 'Dawn Pink'],\n        ['F3EDCF', 'Wheatfield'],\n        ['F3FB62', 'Canary'],\n        ['F3FBD4', 'Orinoco'],\n        ['F3FFD8', 'Carla'],\n        ['F400A1', 'Hollywood Cerise'],\n        ['F4A460', 'Sandy brown'],\n        ['F4C430', 'Saffron'],\n        ['F4D81C', 'Ripe Lemon'],\n        ['F4EBD3', 'Janna'],\n        ['F4F2EE', 'Pampas'],\n        ['F4F4F4', 'Wild Sand'],\n        ['F4F8FF', 'Zircon'],\n        ['F57584', 'Froly'],\n        ['F5C85C', 'Cream Can'],\n        ['F5C999', 'Manhattan'],\n        ['F5D5A0', 'Maize'],\n        ['F5DEB3', 'Wheat'],\n        ['F5E7A2', 'Sandwisp'],\n        ['F5E7E2', 'Pot Pourri'],\n        ['F5E9D3', 'Albescent White'],\n        ['F5EDEF', 'Soft Peach'],\n        ['F5F3E5', 'Ecru White'],\n        ['F5F5DC', 'Beige'],\n        ['F5FB3D', 'Golden Fizz'],\n        ['F5FFBE', 'Australian Mint'],\n        ['F64A8A', 'French Rose'],\n        ['F653A6', 'Brilliant Rose'],\n        ['F6A4C9', 'Illusion'],\n        ['F6F0E6', 'Merino'],\n        ['F6F7F7', 'Black Haze'],\n        ['F6FFDC', 'Spring Sun'],\n        ['F7468A', 'Violet Red'],\n        ['F77703', 'Chilean Fire'],\n        ['F77FBE', 'Persian Pink'],\n        ['F7B668', 'Rajah'],\n        ['F7C8DA', 'Azalea'],\n        ['F7DBE6', 'We Peep'],\n        ['F7F2E1', 'Quarter Spanish White'],\n        ['F7F5FA', 'Whisper'],\n        ['F7FAF7', 'Snow Drift'],\n        ['F8B853', 'Casablanca'],\n        ['F8C3DF', 'Chantilly'],\n        ['F8D9E9', 'Cherub'],\n        ['F8DB9D', 'Marzipan'],\n        ['F8DD5C', 'Energy Yellow'],\n        ['F8E4BF', 'Givry'],\n        ['F8F0E8', 'White Linen'],\n        ['F8F4FF', 'Magnolia'],\n        ['F8F6F1', 'Spring Wood'],\n        ['F8F7DC', 'Coconut Cream'],\n        ['F8F7FC', 'White Lilac'],\n        ['F8F8F7', 'Desert Storm'],\n        ['F8F99C', 'Texas'],\n        ['F8FACD', 'Corn Field'],\n        ['F8FDD3', 'Mimosa'],\n        ['F95A61', 'Carnation'],\n        ['F9BF58', 'Saffron Mango'],\n        ['F9E0ED', 'Carousel Pink'],\n        ['F9E4BC', 'Dairy Cream'],\n        ['F9E663', 'Portica'],\n        ['F9E6F4', 'Underage Pink'],\n        ['F9EAF3', 'Amour'],\n        ['F9F8E4', 'Rum Swizzle'],\n        ['F9FF8B', 'Dolly'],\n        ['F9FFF6', 'Sugar Cane'],\n        ['FA7814', 'Ecstasy'],\n        ['FA9D5A', 'Tan Hide'],\n        ['FAD3A2', 'Corvette'],\n        ['FADFAD', 'Peach Yellow'],\n        ['FAE600', 'Turbo'],\n        ['FAEAB9', 'Astra'],\n        ['FAECCC', 'Champagne'],\n        ['FAF0E6', 'Linen'],\n        ['FAF3F0', 'Fantasy'],\n        ['FAF7D6', 'Citrine White'],\n        ['FAFAFA', 'Alabaster'],\n        ['FAFDE4', 'Hint of Yellow'],\n        ['FAFFA4', 'Milan'],\n        ['FB607F', 'Brink Pink'],\n        ['FB8989', 'Geraldine'],\n        ['FBA0E3', 'Lavender Rose'],\n        ['FBA129', 'Sea Buckthorn'],\n        ['FBAC13', 'Sun'],\n        ['FBAED2', 'Lavender Pink'],\n        ['FBB2A3', 'Rose Bud'],\n        ['FBBEDA', 'Cupid'],\n        ['FBCCE7', 'Classic Rose'],\n        ['FBCEB1', 'Apricot Peach'],\n        ['FBE7B2', 'Banana Mania'],\n        ['FBE870', 'Marigold Yellow'],\n        ['FBE96C', 'Festival'],\n        ['FBEA8C', 'Sweet Corn'],\n        ['FBEC5D', 'Candy Corn'],\n        ['FBF9F9', 'Hint of Red'],\n        ['FBFFBA', 'Shalimar'],\n        ['FC0FC0', 'Shocking Pink'],\n        ['FC80A5', 'Tickle Me Pink'],\n        ['FC9C1D', 'Tree Poppy'],\n        ['FCC01E', 'Lightning Yellow'],\n        ['FCD667', 'Goldenrod'],\n        ['FCD917', 'Candlelight'],\n        ['FCDA98', 'Cherokee'],\n        ['FCF4D0', 'Double Pearl Lusta'],\n        ['FCF4DC', 'Pearl Lusta'],\n        ['FCF8F7', 'Vista White'],\n        ['FCFBF3', 'Bianca'],\n        ['FCFEDA', 'Moon Glow'],\n        ['FCFFE7', 'China Ivory'],\n        ['FCFFF9', 'Ceramic'],\n        ['FD0E35', 'Torch Red'],\n        ['FD5B78', 'Wild Watermelon'],\n        ['FD7B33', 'Crusta'],\n        ['FD7C07', 'Sorbus'],\n        ['FD9FA2', 'Sweet Pink'],\n        ['FDD5B1', 'Light Apricot'],\n        ['FDD7E4', 'Pig Pink'],\n        ['FDE1DC', 'Cinderella'],\n        ['FDE295', 'Golden Glow'],\n        ['FDE910', 'Lemon'],\n        ['FDF5E6', 'Old Lace'],\n        ['FDF6D3', 'Half Colonial White'],\n        ['FDF7AD', 'Drover'],\n        ['FDFEB8', 'Pale Prim'],\n        ['FDFFD5', 'Cumulus'],\n        ['FE28A2', 'Persian Rose'],\n        ['FE4C40', 'Sunset Orange'],\n        ['FE6F5E', 'Bittersweet'],\n        ['FE9D04', 'California'],\n        ['FEA904', 'Yellow Sea'],\n        ['FEBAAD', 'Melon'],\n        ['FED33C', 'Bright Sun'],\n        ['FED85D', 'Dandelion'],\n        ['FEDB8D', 'Salomie'],\n        ['FEE5AC', 'Cape Honey'],\n        ['FEEBF3', 'Remy'],\n        ['FEEFCE', 'Oasis'],\n        ['FEF0EC', 'Bridesmaid'],\n        ['FEF2C7', 'Beeswax'],\n        ['FEF3D8', 'Bleach White'],\n        ['FEF4CC', 'Pipi'],\n        ['FEF4DB', 'Half Spanish White'],\n        ['FEF4F8', 'Wisp Pink'],\n        ['FEF5F1', 'Provincial Pink'],\n        ['FEF7DE', 'Half Dutch White'],\n        ['FEF8E2', 'Solitaire'],\n        ['FEF8FF', 'White Pointer'],\n        ['FEF9E3', 'Off Yellow'],\n        ['FEFCED', 'Orange White'],\n        ['FF0000', 'Red'],\n        ['FF007F', 'Rose'],\n        ['FF00CC', 'Purple Pizzazz'],\n        ['FF00FF', 'Magenta / Fuchsia'],\n        ['FF2400', 'Scarlet'],\n        ['FF3399', 'Wild Strawberry'],\n        ['FF33CC', 'Razzle Dazzle Rose'],\n        ['FF355E', 'Radical Red'],\n        ['FF3F34', 'Red Orange'],\n        ['FF4040', 'Coral Red'],\n        ['FF4D00', 'Vermilion'],\n        ['FF4F00', 'International Orange'],\n        ['FF6037', 'Outrageous Orange'],\n        ['FF6600', 'Blaze Orange'],\n        ['FF66FF', 'Pink Flamingo'],\n        ['FF681F', 'Orange'],\n        ['FF69B4', 'Hot Pink'],\n        ['FF6B53', 'Persimmon'],\n        ['FF6FFF', 'Blush Pink'],\n        ['FF7034', 'Burning Orange'],\n        ['FF7518', 'Pumpkin'],\n        ['FF7D07', 'Flamenco'],\n        ['FF7F00', 'Flush Orange'],\n        ['FF7F50', 'Coral'],\n        ['FF8C69', 'Salmon'],\n        ['FF9000', 'Pizazz'],\n        ['FF910F', 'West Side'],\n        ['FF91A4', 'Pink Salmon'],\n        ['FF9933', 'Neon Carrot'],\n        ['FF9966', 'Atomic Tangerine'],\n        ['FF9980', 'Vivid Tangerine'],\n        ['FF9E2C', 'Sunshade'],\n        ['FFA000', 'Orange Peel'],\n        ['FFA194', 'Mona Lisa'],\n        ['FFA500', 'Web Orange'],\n        ['FFA6C9', 'Carnation Pink'],\n        ['FFAB81', 'Hit Pink'],\n        ['FFAE42', 'Yellow Orange'],\n        ['FFB0AC', 'Cornflower Lilac'],\n        ['FFB1B3', 'Sundown'],\n        ['FFB31F', 'My Sin'],\n        ['FFB555', 'Texas Rose'],\n        ['FFB7D5', 'Cotton Candy'],\n        ['FFB97B', 'Macaroni and Cheese'],\n        ['FFBA00', 'Selective Yellow'],\n        ['FFBD5F', 'Koromiko'],\n        ['FFBF00', 'Amber'],\n        ['FFC0A8', 'Wax Flower'],\n        ['FFC0CB', 'Pink'],\n        ['FFC3C0', 'Your Pink'],\n        ['FFC901', 'Supernova'],\n        ['FFCBA4', 'Flesh'],\n        ['FFCC33', 'Sunglow'],\n        ['FFCC5C', 'Golden Tainoi'],\n        ['FFCC99', 'Peach Orange'],\n        ['FFCD8C', 'Chardonnay'],\n        ['FFD1DC', 'Pastel Pink'],\n        ['FFD2B7', 'Romantic'],\n        ['FFD38C', 'Grandis'],\n        ['FFD700', 'Gold'],\n        ['FFD800', 'School bus Yellow'],\n        ['FFD8D9', 'Cosmos'],\n        ['FFDB58', 'Mustard'],\n        ['FFDCD6', 'Peach Schnapps'],\n        ['FFDDAF', 'Caramel'],\n        ['FFDDCD', 'Tuft Bush'],\n        ['FFDDCF', 'Watusi'],\n        ['FFDDF4', 'Pink Lace'],\n        ['FFDEAD', 'Navajo White'],\n        ['FFDEB3', 'Frangipani'],\n        ['FFE1DF', 'Pippin'],\n        ['FFE1F2', 'Pale Rose'],\n        ['FFE2C5', 'Negroni'],\n        ['FFE5A0', 'Cream Brulee'],\n        ['FFE5B4', 'Peach'],\n        ['FFE6C7', 'Tequila'],\n        ['FFE772', 'Kournikova'],\n        ['FFEAC8', 'Sandy Beach'],\n        ['FFEAD4', 'Karry'],\n        ['FFEC13', 'Broom'],\n        ['FFEDBC', 'Colonial White'],\n        ['FFEED8', 'Derby'],\n        ['FFEFA1', 'Vis Vis'],\n        ['FFEFC1', 'Egg White'],\n        ['FFEFD5', 'Papaya Whip'],\n        ['FFEFEC', 'Fair Pink'],\n        ['FFF0DB', 'Peach Cream'],\n        ['FFF0F5', 'Lavender blush'],\n        ['FFF14F', 'Gorse'],\n        ['FFF1B5', 'Buttermilk'],\n        ['FFF1D8', 'Pink Lady'],\n        ['FFF1EE', 'Forget Me Not'],\n        ['FFF1F9', 'Tutu'],\n        ['FFF39D', 'Picasso'],\n        ['FFF3F1', 'Chardon'],\n        ['FFF46E', 'Paris Daisy'],\n        ['FFF4CE', 'Barley White'],\n        ['FFF4DD', 'Egg Sour'],\n        ['FFF4E0', 'Sazerac'],\n        ['FFF4E8', 'Serenade'],\n        ['FFF4F3', 'Chablis'],\n        ['FFF5EE', 'Seashell Peach'],\n        ['FFF5F3', 'Sauvignon'],\n        ['FFF6D4', 'Milk Punch'],\n        ['FFF6DF', 'Varden'],\n        ['FFF6F5', 'Rose White'],\n        ['FFF8D1', 'Baja White'],\n        ['FFF9E2', 'Gin Fizz'],\n        ['FFF9E6', 'Early Dawn'],\n        ['FFFACD', 'Lemon Chiffon'],\n        ['FFFAF4', 'Bridal Heath'],\n        ['FFFBDC', 'Scotch Mist'],\n        ['FFFBF9', 'Soapstone'],\n        ['FFFC99', 'Witch Haze'],\n        ['FFFCEA', 'Buttery White'],\n        ['FFFCEE', 'Island Spice'],\n        ['FFFDD0', 'Cream'],\n        ['FFFDE6', 'Chilean Heath'],\n        ['FFFDE8', 'Travertine'],\n        ['FFFDF3', 'Orchid White'],\n        ['FFFDF4', 'Quarter Pearl Lusta'],\n        ['FFFEE1', 'Half and Half'],\n        ['FFFEEC', 'Apricot White'],\n        ['FFFEF0', 'Rice Cake'],\n        ['FFFEF6', 'Black White'],\n        ['FFFEFD', 'Romance'],\n        ['FFFF00', 'Yellow'],\n        ['FFFF66', 'Laser Lemon'],\n        ['FFFF99', 'Pale Canary'],\n        ['FFFFB4', 'Portafino'],\n        ['FFFFF0', 'Ivory'],\n        ['FFFFFF', 'White']\n    ]\n};\n\nexport default ntc;\n","import ntc from './ntc.js';\nntc.init();\n\nconst dayInMs = 24 * 60 * 60 * 1000;\nconst nrOfAvailableColors = ntc.names.length;\n\nexport function getPercentageOfDay() {\n    const now = new Date().getTime();\n    return (now % dayInMs) / dayInMs;\n}\n\n/**\n * RGB Color Wheel:\n *\n *     Red        Yellow       Green        Cyan         Blue         Magenta       Red\n *         |------------|------------|------------|------------|------------|------------|\n *R:G:B:  1:0:0       1:1:0        0:1:0       0:1:1         0:0:1       1:0:1         1:0:0\n *         0            1/6          2/6         3/6           4/6         5/6           6/6 = 0\n *\n */\nexport function getRgbColorWheelValue() {\n    let perc = getPercentageOfDay();\n    let r,\n        g,\n        b = 0;\n    if (perc <= 1 / 6) {\n        r = 255;\n        g = 6 * perc * 255;\n        b = 0;\n    } else if (perc <= 2 / 6) {\n        r = 6 * (2 / 6 - perc) * 255;\n        g = 255;\n        b = 0;\n    } else if (perc <= 3 / 6) {\n        r = 0;\n        g = 255;\n        b = 6 * (perc - 2 / 6) * 255;\n    } else if (perc <= 4 / 6) {\n        r = 0;\n        g = 6 * (4 / 6 - perc) * 255;\n        b = 255;\n    } else if (perc <= 5 / 6) {\n        r = 6 * (perc - 4 / 6) * 255;\n        g = 0;\n        b = 255;\n    } else if (perc <= 6 / 6) {\n        r = 255;\n        g = 0;\n        b = 6 * (6 / 6 - perc) * 255;\n    }\n    r = Math.floor(r);\n    g = Math.floor(g);\n    b = Math.floor(b);\n    let hex = '#' + r.toString(16).padStart(2, '0') + g.toString(16).padStart(2, '0') + b.toString(16).padStart(2, '0');\n    let colorInfo = ntc.name(hex);\n\n    let hsl = ntc.hsl(colorInfo[0]);\n\n    return {\n        name: colorInfo[1],\n        hex: colorInfo[0],\n        r,\n        g,\n        b,\n        hsl\n    };\n}\ngetRgbColorWheelValue.description = 'RGB Color Wheel Value';\n\n/**\n * Linear color function, from 0 (black) to fff (white), by percentage of the day's progress\n */\nexport function getLinearColorForDayTime() {\n    let index = Math.floor(nrOfAvailableColors * getPercentageOfDay());\n    let color = ntc.names[index];\n    let rgb = ntc.rgb(color[0]);\n    let hsl = ntc.hsl('#' + color[0]);\n    return {\n        name: color[1],\n        hex: '#' + color[0],\n        r: rgb[0],\n        g: rgb[1],\n        b: rgb[2],\n        hsl\n    };\n}\ngetLinearColorForDayTime.description = 'Linear color (from dark to light) per daytime';\n\n/**\n * Random function\n */\nexport function getRandomColorValue() {\n    let index = Math.floor(nrOfAvailableColors * Math.random());\n    let color = ntc.names[index];\n    let rgb = ntc.rgb(color[0]);\n    let hsl = ntc.hsl('#' + color[0]);\n    let value = {\n        name: color[1],\n        hex: '#' + color[0],\n        r: rgb[0],\n        g: rgb[1],\n        b: rgb[2],\n        hsl\n    };\n    return value;\n}\ngetRandomColorValue.description = 'Random color value';\n\nexport function inverseColor(r, g, b) {\n    return {\n        r: 255 - r,\n        g: 255 - g,\n        b: 255 - b\n    };\n}\n\nexport const algoMap = {\n    getLinearColorForDayTime,\n    getRgbColorWheelValue,\n    getRandomColorValue\n};\n","import { h, render, Component } from 'preact';\nimport { algoMap, inverseColor } from './lib';\n\nclass Main extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            time: new Date(),\n            algorithm: Object.keys(algoMap)[0],\n            backgroundColor: '#000',\n            inverseColor: '#000',\n            textColor: '#000',\n            colorName: 'black',\n            textShadow: 'none',\n            updateInterval: 3000,\n            showMenu: false\n        };\n\n        this.displayMenu = this.displayMenu.bind(this);\n        this.hideMenu = this.hideMenu.bind(this);\n        this.onAlgoChange = this.onAlgoChange.bind(this);\n\n        setTimeout(() => {\n            this.update();\n        }, 100);\n    }\n\n    componentDidMount() {\n        this.clockTimer = setInterval(() => {\n            this.setState({ time: new Date() });\n        }, 1000);\n    }\n\n    update() {\n        let colorInfo = algoMap[this.state.algorithm]();\n        let inverseCol = inverseColor(colorInfo.r, colorInfo.g, colorInfo.b);\n        let backgroundColor = colorInfo.hex;\n        let colorName = colorInfo.name;\n        let textColor = `rgb(${inverseCol.r},${inverseCol.g},${inverseCol.b})`;\n        let textShadow = null;\n        if (colorInfo.hsl[2] < 128) {\n            // dark background, so light shadow\n            textShadow = '0 2px 1px white';\n            textShadow = '0 1px 0px white';\n        } else {\n            // ligh background, so dark shadow\n            textShadow = '0 2px 1px black';\n            textShadow = '0 1px 0px black';\n        }\n\n        this.setState({\n            backgroundColor,\n            inverseColor,\n            textColor,\n            colorName,\n            textShadow\n        });\n        // refresh every n seconds (can be set by the user);\n        if (this.updateTimer) {\n            clearTimeout(this.updateTimer);\n        }\n        this.updateTimer = setTimeout(() => this.update(), this.state.updateInterval);\n    }\n\n    displayMenu(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showMenu: true });\n    }\n\n    hideMenu(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showMenu: false });\n    }\n\n    onAlgoChange(e) {\n        this.setState({ algorithm: e.target.value }, () => this.update());\n    }\n\n    toggleFullscreen(e) {\n        e.stopPropagation();\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else {\n            if (document.fullscreenEnabled) {\n                document.body.requestFullscreen();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.clockTimer);\n    }\n\n    render(\n        {},\n        { updateInterval, backgroundColor, inverseColor, textColor, colorName, textShadow, time, showMenu, algorithm }\n    ) {\n        let timeStr = `${String(time.getHours()).padStart(2, '0')}:${String(time.getMinutes()).padStart(\n            2,\n            '0'\n        )}:${String(time.getSeconds()).padStart(2, '0')}`;\n        let algoItems = Object.keys(algoMap).map(key => {\n            return (\n                <option value={key} key={key}>\n                    {algoMap[key].description}\n                </option>\n            );\n        });\n\n        return (\n            <div id=\"main\" style={{ backgroundColor }} onClick={this.displayMenu}>\n                <div id=\"time\" style={{ color: textColor, textShadow }}>\n                    {timeStr}\n                </div>\n                <div id=\"name\" style={{ color: textColor, textShadow }}>\n                    {colorName}\n                    <br />\n                    {backgroundColor}\n                </div>\n                <div id=\"settings-container\" class={showMenu ? 'on' : ''} onClick={this.hideMenu}>\n                    <div id=\"settings\" onClick={e => e.stopPropagation()}>\n                        <div style=\"display:flex;align-items:center;flex-direction:row;justify-content:space-between\">\n                            <span style=\"padding: 5px;font-size:0.7rem;\">\n                                colorclock by <a href=\"https://alexi.ch/\">alexi.ch</a>\n                            </span>\n                            <a\n                                href=\"#\"\n                                onClick={this.hideMenu}\n                                style=\"width:20px;height:20px;display:block;text-align:center;margin:5px;padding:5px;border-radius:50%;border:2px solid black;font-family:'Oxygen Mono';text-decoration:none;color:black\"\n                            >\n                                X\n                            </a>\n                        </div>\n                        <div class=\"settings-form\" style=\"flex-grow: 1\">\n                            <div>\n                                <label>\n                                    Color Algorithm\n                                    <select value={algorithm} onChange={this.onAlgoChange}>\n                                        {algoItems}\n                                    </select>\n                                </label>\n                            </div>\n                            <div>\n                                <label>\n                                    Update interval [s]\n                                    <input\n                                        type=\"number\"\n                                        min=\"1\"\n                                        value={updateInterval / 1000}\n                                        onChange={e => this.setState({ updateInterval: Number(e.target.value) * 1000 })}\n                                    />\n                                </label>\n                            </div>\n                            <div>\n                                <button type=\"button\" onClick={this.toggleFullscreen}>\n                                    toggle Fullscreen\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nrender(<Main />, document.body);\n"]}